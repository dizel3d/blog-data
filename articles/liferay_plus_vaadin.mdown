#Liferay + Vaadin

##Введение

Около полугода я работаю над проектами на основе портала Liferay. Как сказано на сайте http://www.liferay.com, Liferay это энтерпрайз web-платформа для бизнес решений предоставляющая быстрый старт. Но больший интерес представляет тот факт, что это бесплатное и opensource решение. Так же имеется энтерпрайз версия с поддержкой и более быстром фиксе багов, которые в бесплатной версии нередко с первого взгляда ставят в тупик, но большую часть из них можно решить погуглив и почитав багтреккер.

Из коробки Liferay предоставляет немалый набор функций, который можно гибко настраивать. В случае, если этого не хватает в лайфрее прдусмотрелн механизм расширений на основе системы портлетов, поддерживается JSR-168 и JSR-286. В текущей версии мы можем использовать 3 вида портлетов:

* Liferay MVC

* JSF 2.0

* Vaadin

Сегодня я бы хотел рассказать как создать простой портлет на Vaadin.
Для начала я бы советовал ознакомится c веб-фреймворком Vaadin, это можно сделать на их сайте https://vaadin.com/home, так же там представлена отличная книга, описывающая большенство "юзкейсов".

##Установка liferay

Первым делом нужно скачать последнюю версию liferay. На момент написания статьи это была 6.1 GA2.

http://www.liferay.com/downloads/liferay-portal/available-releases

Так же требуется скачать Liferay Plugins SDK 6.1 GA 2:

http://www.liferay.com/downloads/liferay-portal/additional-files

Т.к. я имел опыт настройти сервлет контейнера Tomcat, я работаю с "Bundled with Tomcat", но вы можете выбрать любой другой, для вас удобный, сервлет контейнер или aplication server, это не повлияет на дальнейшие шаги.

После распаковки архива, попробуем запустить liferay. Создадим файл portal-ext.properties в корневой директории liferay'я со следующим содержанием: 

	jdbc.default.driverClassName=com.mysql.jdbc.Driver
	
	jdbc.default.url=jdbc:mysql://localhost/liferay?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false
	
	jdbc.default.username=root
	
	jdbc.default.password=

Также необходимо создать соответствующую базу, в данном случае "liferay".
Далее откроем терминал и перейдем [liferay_path]/tomcat-7.0.27/bin и выполним:

<code>
./catalina start
</code>

При первом старте автоматически будет заполнена база тестовым контентом. Примерно через 5 минут откроется окно браузера на главное странице портала, если это не произошло, откройте браузер и перейдите http://localhost:8080. После этого можно остановить liferay командой

<code>
./catalina stop
</code>

## Настройка среды разработки 
Теперь перейдем к настройке среды разработки. Я использую eclipse, советую скачать EE версию с официального сайта. На необходимо установить плагин - Liferay IDE. Для этого перейдем в Eclipse Marketplace. Находим Liferay IDE и устанавливаем.

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/1.png)

Установщик запросит перезагрузку, после перезагрузки требуется перейти на вьюху Servers и правым щелчком вызвать меню и выбрать New -> Server

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/2.png)

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/3.png)

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/4.png)

Теперь вы увидете, что появился Liferay 6.1 Tomcat в списке серверов. Из этой же вьюхи вы можете запустить сервер.

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/5.png)

## Создание портлета

Теперь перейдем непосредственно к написанию портлета. Для примера мы сделаем портлет который будет отображать список всех пользователей и краткую информацию о выбранном в отдельном окне.
Идем в меню File -> New -> Other…

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/6.png)

В первом окне визарда нужно выбрать название портлета, все остальные параметры оставляем по умолчанию. Далее на панели Liferay Plugin SDK нажать configure. Нажать Add и указать путь к директории с Liferay SDK. 

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/7.png)

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/8.png)

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/9.png)

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/10.png)

Далее вовращаемся к визарду создания портлета. Жмем Next и выбираем Vaadin.

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/11.png)

После мы должны увидеть следующую структуру проекта:

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/12.png)

Открываем UsersShowApplication.java и пишем: 

	package UsersShow;

	import java.util.Date;
	import java.util.List;

	import com.liferay.portal.kernel.exception.SystemException;
	import com.liferay.portal.model.User;
	import com.liferay.portal.service.UserLocalServiceUtil;
	import com.vaadin.Application;
	import com.vaadin.event.ItemClickEvent;
	import com.vaadin.ui.Label;
	import com.vaadin.ui.Panel;
	import com.vaadin.ui.Table;
	import com.vaadin.ui.Window;

	@SuppressWarnings("serial")
	publicclass UsersShowApplication extends Application {

	publicvoid init() {
	final Window window = new Window();

	setMainWindow(window);
	Table table = new Table();
	table.setSizeFull();
	table.setHeight("200px");
	table.setSelectable(true);

	table.addContainerProperty("Name", String.class, null);
	table.addContainerProperty("Registaratoin date", Date.class, null);
	table.addContainerProperty("E-mail", String.class, null);

	try {
	/**
	 * Получаем всех юзеров из сервиса Liferay'я
	 */
	List<User> users = UserLocalServiceUtil.getUsers(0,
	Integer.MAX_VALUE);

	for (User u : users) {
	if (u.isDefaultUser()) {
	continue;
	}
	table.addItem(new Object[] { u.getFullName(),
	u.getCreateDate(), u.getEmailAddress() }, u.getUserId());
	}
	} catch (SystemException e) {
	window.showNotification("Error",
	"Can not load users: " + e.getLocalizedMessage(),
	Window.Notification.TYPE_ERROR_MESSAGE);
	}

	final Label detailLable = new Label();
	detailLable.setContentMode(Label.CONTENT_XHTML);

	table.addListener(new ItemClickEvent.ItemClickListener() {

	@Override
	publicvoid itemClick(ItemClickEvent event) {
	try {
	User user = UserLocalServiceUtil.getUserById((Long) event
	.getItemId());

	StringBuilder sb = new StringBuilder();

	sb.append("<table>");
	sb.append("<tr><td>Full Name:</td><td>")
	.append(user.getFullName()).append("</td></tr>");
	sb.append("<tr><td>EmailAddress:</td><td>")
	.append(user.getEmailAddress())
	.append("</td></tr>");
	sb.append("<tr><td>Birthday:</td><td>")
	.append(user.getBirthday()).append("</td></tr>");
	sb.append("<tr><td>LastLoginDate:</td><td>")
	.append(user.getLastLoginDate())
	.append("</td></tr>");
	sb.append("</table>");

	detailLable.setValue(sb.toString());
	} catch (Exception e) {
	window.showNotification("Error", "Can not show details: "
	+ e.getLocalizedMessage(),
	Window.Notification.TYPE_ERROR_MESSAGE);
	}
	}
	});

	Panel detailPanel = new Panel("Details");
	detailPanel.addComponent(detailLable);
	window.addComponent(table);
	window.addComponent(detailPanel);
	}

	}

Я намеренно использую local service, чтобы не усложнять логику примера.
Это все, что нужно сделать для создания простого портлета.
Далее деплоим портлет. Кликаем правой клавишей на сервере и выбираем Add and Remove...

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/13.png)

И добавляем наш портлет на правую панель.

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/14.png)

В консоли вы увидете примерно следующие строки

	13:00:56,662 INFO  [pool-2-thread-2][HotDeployImpl:178] Deploying UsersShow-portlet from queue
	13:00:56,663 INFO  [pool-2-thread-2][PluginPackageUtil:1033] Reading plugin package for UsersShow-portlet


Далее переходим на страницу liferay'я. htttp://localhost:8080. Вам требуется залогинится пользователем с правами администратора портала (По умолчанию первый пользователь test@liferay.com является администратором). Переходим на страницу, где будет размещаться наш портлет и на верхнем тулбаре выбрать Add -> More... в списке выбрать UsersShow

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/15.png)

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/16.png)

Обновляем страницу и мы должны увидеть: 

![](https://raw.github.com/dimafeng/blog-data/master/articles/lifera_plus_vaadin/17.png)
